<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-4.3.xsd">
<!--连接数据库的具体参数配置文件properties-->
        <util:properties id="cfg" location="classpath:mapper/mybatisConfig.properties"/>
    <!--连接池的配置参数-->
        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
            <property name="url" value="#{cfg.url}"/>
            <property name="driverClassName" value="#{cfg.driverClassName}"/>
            <property name="username" value="#{cfg.username}"/>
            <property name="password" value="#{cfg.password}"/>
            <!-- 初始化连接大小 -->
            <property name="initialSize" value="#{cfg.initialSize}" />
            <!-- 连接池最大数量 -->
            <property name="maxActive" value="#{cfg.maxActive}" />
            <!-- 连接池最小空闲 -->
            <property name="minIdle" value="#{cfg.minIdle}" />
            <!-- 获取连接最大等待时间 -->
            <property name="maxWait" value="#{cfg.maxWait}" />
        </bean>
<!--spring-mybatis的整合-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:mapper/mysql.xml"/>
    </bean>
<!--进行mapper的扫描-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--过时可以不使用已经过时-->
        <!--<property name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
        <property name="basePackage" value="com.yy.dubbo.dao"/>
    </bean>
<!--开启事物的配置 使用注解的方式可用
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>-->

    










</beans>
